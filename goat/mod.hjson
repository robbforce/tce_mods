{
  modInfo:
  {
    id: goat
    name: Goat
    authors: fubarbarian
    version: "0.0.1.0"
    preview: preview_goat
    twitter: n/a
    weblink: n/a
    mail: test@email.com
    description: "Adds a goat that can be recruited at normal native villages. It behaves like a normal pack animal, but has interesting interactions with specific crew members."
    defaultLang: en
  }
  imageData:[
    {
      id: preview_goat
      file: goat/preview_goat.png
    }
    {
      id: sprite_goat_01
      file: goat/sprite_goat_01.png
    }
    {
      id: face_goat_01
      file: goat/face_goat_01.png
    }
    {
      id: minisprite_goat_01
      file: goat/minisprite_goat_01.png
    }
    {
      id: sprite_goat_02
      file: goat/sprite_goat_02.png
    }
    {
      id: face_goat_02
      file: goat/face_goat_02.png
    }
    {
      id: minisprite_goat_02
      file: goat/minisprite_goat_02.png
    }
    {
      id: sprite_goat_03
      file: goat/sprite_goat_03.png
    }
    {
      id: face_goat_03
      file: goat/face_goat_03.png
    }
    {
      id: minisprite_goat_03
      file: goat/minisprite_goat_03.png
    }
    {
      id: sprite_goat_04
      file: goat/sprite_goat_04.png
    }
    {
      id: face_goat_04
      file: goat/face_goat_04.png
    }
    {
      id: sprite_goat_05
      file: goat/sprite_goat_05.png
    }
    {
      id: face_goat_05
      file: goat/face_goat_05.png
    }
    {
      id: sprite_goat_06
      file: goat/sprite_goat_06.png
    }
    {
      id: face_goat_06
      file: goat/face_goat_06.png
    }
    {
      id: st_produce_milk
      file: goat/status_produce_milk.png
    }    
    {
      id: goat_milk
      file: goat/goat_milk.png
    }
    {
      id: goat_cheese_sour
      file: goat/goat_cheese_sour.png
    }
    {
      id: goat_cheese_tangy
      file: goat/goat_cheese_tangy.png
    }
    {
      id: goat_cheese_perfect
      file: goat/goat_cheese_perfect.png
    }
    {
      id: st_cthulu
      file: goat/status_cthulu.png
    }
    {
      id: st_mutate_tentacle
      file: goat/status_mutate_tentacle.png
    }
    {
      id: hud_dice_symbol_twhip_1
      file: goat/hud_dice_symbol_twhip_1.png
    }
    {
      id: hud_dice_symbol_twhip_2
      file: goat/hud_dice_symbol_twhip_2.png
    }
    {
      id: st_mutate_lizard
      file: goat/status_mutate_lizard.png
    }
    {
      id: st_mutate_aura
      file: goat/status_mutate_aura.png
    }
    {
      id: st_mutate_armour
      file: goat/status_mutate_armour.png
    }
    {
      id: st_mutate_horns
      file: goat/status_mutate_horns.png
    }
    {
      id: hud_dice_symbol_mhorns
      file: goat/hud_dice_symbol_mhorns.png
    }    
  ],
  modEntries:[
    {
      id: anm-goat-female
      debugCategory: Pack Animal
      title: txt-anm-goat-title
      description: txt-anm-goat
      variations: [
        {
          gender: female
          name: animalFemale
          sprite: sprite_goat_01
          portrait: face_goat_01
          miniSprite: minisprite_goat_01
        }
        {
          gender: female
          name: animalFemale
          sprite: sprite_goat_02
          portrait: face_goat_02
          miniSprite: minisprite_goat_02
        }
        {
          gender: female
          name: animalFemale
          sprite: sprite_goat_03
          portrait: face_goat_03
          miniSprite: minisprite_goat_03
        }
      ]
      health: 4
      capacity: 1
      flags: +animal +packAnimal +mammal +goat
      isMountable: false
      levels: [
        {statuses: st-produce-goat-milk}
        {dice: dc-goat-1!3}
        {dice: dc-goat-1!4}
        {dice: dc-goat-1!5}
      ]
    }
    {
      id: anm-goat-male
      debugCategory: Pack Animal
      title: txt-anm-goat-title
      description: txt-anm-goat
      variations: [
        {
          gender: male
          name: animalMale
          sprite: sprite_goat_04
          portrait: face_goat_04
          miniSprite: minisprite_goat_01
        }
        {
          gender: male
          name: animalMale
          sprite: sprite_goat_05
          portrait: face_goat_05
          miniSprite: minisprite_goat_02
        }
        {
          gender: male
          name: animalMale
          sprite: sprite_goat_06
          portrait: face_goat_06
          miniSprite: minisprite_goat_03
        }
      ]
      health: 5
      capacity: 1
      flags: +animal +packAnimal +mammal +goat
      isMountable: false
      levels: [
        {dice: dc-goat-1!3}
        {dice: dc-goat-1!4}
        {dice: dc-goat-1!5}
        {dice: dc-goat-2!6}
      ]
    }
    {
      id: dc-goat-1
      sprite: hud_dice_bg_animal_1.png
      faces: ram ram ram ram ram ram
    }
    {
      id: dc-goat-2
      sprite: hud_dice_bg_animal_2.png
      faces: ram ram ram ram ram horns
    }
    {
      targetId: +cl-celebration-audience::lines
      charEvents: {reqCharFlags: +goat}
      text: txt-cl-celebration-audience-goat
    }

    # Recruit in generic village.
    {
      targetId: +evt-village-recruit-select-animal::select
      ref: evt-village-recruit-goat
    }
    {
      id: evt-village-recruit-goat
      reqLocationFlags: +tribeWarriors | +tribeScouts | +tribeShamans
      npc: anm-goat
      npcEvents: {
        actions: {
          actionText: txt-anm-goat-title
          text: txt-evt-village-recruit-animal-generic
          setPartyFlags: +recruitedSomebody
          addNPC: true
          select: evt-village-main-update
        }
      }
    }
    # If the goat is female and there's an animal handler or bedouin, then produce milk every 3 days.
    {
      id: st-produce-goat-milk
      debugCategory: Animals
      title: txt-st-produce-goat-milk-title
      description: txt-st-produce-goat-milk
      sprite: st_produce_milk
      dayEvents: {
        reqAge: 3..
        charEvents: {
          reqCharFlags: +nativeAnimalHandler | +bedouin
          items: {it-goat-milk: 1}
        }
        resetStatusAge: true
      }
    }
    # Goat milk spoils very quickly, but can be consumed for sanity, or made into cheese by a mid-level cook.
    {
      id: it-goat-milk
      name: txt-it-goat-milk-name
      description: txt-it-goat-milk
      debugCategory: sanity
      sprite: goat_milk
      maxStack: 10
      value: 5
      autoRemove: true
      dayEvents: {
        slots: 1
        reqPartyStatus: -expire-goat-milk
        setPartyStatus: +expire-goat-milk
      }
      useEvents: {
        select: [
          {
            prio: 0
            charEvents: {reqStatus: +cookSanity-4, chat: cl-cook-meat}
            removeItem: true
            items: {it-goat-cheese-perfect: 1}
          }
          {
            prio: 1
            charEvents: {reqStatus: +cookSanity-3, chat: cl-cook-meat}
            removeItem: true
            items: {it-goat-cheese-tangy: 1}
          }
          {
            prio: 2
            charEvents: {reqStatus: +cookSanity-2, chat: cl-cook-meat-fail}
            removeItem: true
            items: {it-goat-cheese-sour: 1}
          }
          {
            prio: 3
            sanity: 5
            playSound: sfx_drink_var1 sfx_drink_var2
            chat: cl-it-goat-milk
            removeItem: true
          }
        ]
      }
    }
    # Milk can be used for hydration if the trek is out of water.
    #{ 
    #  targetId: +tl-desert::moveCost
    #  data: {it-goat-milk: 5}
    #}
    {
      id: st-expire-goat-milk
      debugCategory: internal
      dayEvents: [
        {
          prio: 0
          optional: true
          reqItems: {it-goat-milk: 0}
          removeStatus: true
        }
        {
          prio: 1
          # Arctic conditions extend the shelf life significantly.
          reqBiomeFlags: +arctic
          reqAge: 12..
          # There's a small chance the milk won't spoil immediately.
          select: [
            {slots: 3}
            {
              slots: 7
              reqItems: {it-goat-milk: 1..}
              items: {it-goat-milk: -1}
              resetStatusAge: true
            }
          ]
        }
        {
          prio: 1
          reqBiomeFlags: -arctic
          reqAge: 4..
          # There's a very small chance the milk won't spoil immediately.
          select: [
            {slots: 1}
            {
              slots: 9
              reqItems: {it-goat-milk: 1..}
              items: {it-goat-milk: -1}
              resetStatusAge: true
            }
          ]
        }
      ]
    }
    {
      id: cl-it-goat-milk
      lines: [
        {text: txt-cl-it-goat-milk, reqCharFlags: +humanoid}
      ]
    }
    {
      id: it-goat-cheese-sour
      name: txt-it-goat-cheese-sour-name
      description: txt-it-goat-cheese-sour
      debugCategory: sanity
      sprite: goat_cheese_sour
      value: 3
      maxStack: 10
      useEvents: [
        {
          slots: 1
          sanity: 7
          setPartyFlags: +nonCocaUsers
          playSound: sfx_eat_var1 sfx_eat_var2
          chat: cl-item-goat-cheese-sour
          removeItem: true
        }
      ]   
    }
    {
      id: it-goat-cheese-tangy
      name: txt-it-goat-cheese-tangy-name
      description: txt-it-goat-cheese-tangy
      debugCategory: sanity
      sprite: goat_cheese_tangy
      value: 5
      maxStack: 10
      useEvents: [
        {
          slots: 1
          sanity: 10
          setPartyFlags: +nonCocaUsers
          playSound: sfx_eat_var1 sfx_eat_var2
          chat: cl-item-goat-cheese-tangy
          removeItem: true
        }
      ]   
    }
    {
      id: it-goat-cheese-perfect
      name: txt-it-goat-cheese-perfect-name
      description: txt-it-goat-cheese-perfect
      debugCategory: sanity
      sprite: goat_cheese_perfect
      value: {base: 5, mission: 10, village: 10, karma: 1}
      maxStack: 10
      useEvents: [
        {
          slots: 1
          sanity: 15
          setPartyFlags: +nonCocaUsers
          playSound: sfx_eat_var1 sfx_eat_var2
          chat: cl-item-goat-cheese-perfect
          removeItem: true
        }
      ]   
    }
    {
      id: cl-item-goat-cheese-sour
      lines: [
        {text: txt-cl-item-goat-cheese-sour, reqCharFlags: +humanoid}
      ]
    }
    {
      id: cl-item-goat-cheese-tangy
      lines: [
        {text: txt-cl-item-goat-cheese-tangy, reqCharFlags: +humanoid}
      ]
    }
    {
      id: cl-item-goat-cheese-perfect
      lines: [
        {text: txt-cl-item-goat-cheese-perfect, reqCharFlags: +humanoid}
      ]
    }
    # If there's a cultist in the party, add a random quest to sacrifice a goat to a Great Old One.
    #{
    #  import: goat/goat-quest.hjson
    #}
    {
      targetId: +evt-harbor-quest-offer::select
      slots: 40
      reqWorld: 1..
      charEvents: {reqCharFlags: +cultist}
      select: evt-quest-sacrifice-goat
    }
    {
      id: evt-quest-sacrifice-goat
      npc: pl-cultist
      npcEvents: {
        text: txt-evt-quest-sacrifice-goat
        actions: [
          {
            actionText: txt-evt-harbor-quest-missionary-action
            setPartyStatus: +sacrifice-goat
            text: txt-evt-quest-sacrifice-goat-accept
            select: evt-harbor-eventSelection
          }
          {
            actionText: txt-evt-angry-demandPayment-action-1
            text: txt-evt-quest-sacrifice-goat-refuse
            select: evt-harbor-eventSelection
          }
        ]
      }
    }
    {
      id: st-sacrifice-goat
      debugCategory: Quest
      title: txt-st-sacrifice-goat-title
      description: txt-st-sacrifice-goat
      sprite: st_cthulu
      important: true
    }
    {
      targetId: +evt-world-initQuests::partyEvents
      optional: true
      reqPartyStatus: +sacrifice-goat
      addLocation: {ref: loc-altar, range: world}
      posTile: {locationFlags: +altar}
      setLocationFlags: +questGoat
    }
    {
      targetId: +evt-harbor-quest-completedCheck::select
      reqPartyStatus: +sacrifice-goat
      select: evt-quest-sacrifice-goat-complete
    }
    {
      id: evt-quest-sacrifice-goat-complete
      setPartyStatus: -sacrifice-goat
      npc: npc-cultist
      select: [
        {
          reqPartyFlags: +sacrificed-goat
          setPartyFlags: -sacrificed-goat
          text: txt-evt-quest-sacrifice-goat-success
          incAchievement: ach-complete-quests
          actions: evt-harbor-quest-reward
        }
        {
          reqPartyFlags: -sacrificed-goat
          text: txt-evt-quest-sacrifice-goat-failure
          fame: -fameLarge
          actions: evt-harbor-eventSelection
        }
      ]
    }
    # Add some new mutations for characters, which can be granted after a sacrifice.
    {
      id: df-twhip_1
      sprite: hud_dice_symbol_twhip_1
      bgSprite: hud_dice_bg_attack_1.png
    }
    {
      id: df-twhip_2
      sprite: hud_dice_symbol_twhip_2
      bgSprite: hud_dice_bg_attack_1.png
    }
    {
      id: dp-tentacle-smack
      name: txt-attack-name-tentacle-smack
      faces: twhip_1
      damage: 1
      targetBuff: buf-stun
      sound: sfx_whipCrack
    }
    {
      id: dp-tentacle-slash
      name: txt-attack-name-tentacle-slash
      faces: twhip_1 sword
      damage: 3
      targetBuff: buf-stun
      sound: sfx_whipCrack
    }
    {
      id: dp-tentacle-constrict
      name: txt-attack-name-tentacle-constrict
      faces: twhip_2
      damage: 2
      targetBuff: buf-stun-2
      sound: sfx_whipCrack
    }
    {
      id: dp-tentacle-strangle
      name: txt-attack-name-tentacle-strangle
      faces: twhip_2 stability
      damage: 4
      targetBuff: buf-stun-2
      sound: sfx_whipCrack
    }
    {
      id: dc-attack-mutateTentacle
      sprite: hud_dice_bg_animal_1.png
      faces: tentacle tentacle twhip_1 twhip_1 twhip_2 twhip_2
    }
    {
      id: st-mutateTentacle
      important: true
      debugCategory: mutation
      title: txt-st-mutateTentacle-title
      description: txt-st-mutateTentacle
      sprite: st_mutate_tentacle
      bonus: {dice: dc-attack-mutateTentacle}
    }
    {
      id: st-mutateLizardFlesh
      important: true
      debugCategory: mutation
      title: txt-st-mutateLizardFlesh-title
      description: txt-st-mutateLizardFlesh
      sprite: st_mutate_lizard
      bonus: {healthRegen: 0.8}
    }
    {
      id: st-mutateOminousAura
      important: true
      debugCategory: mutation
      title: txt-st-mutateOminousAura-title
      description: txt-st-mutateOminousAura
      sprite: st_mutate_aura
      bonus: {zoneEventChance: -0.3}
    }
    # Redirect to a custom leave event if an aura is present.
    {
      targetId: /evt-village-actions::select
      partyEvents: [
        {
          actions: [
            evt-village-familyAmulet
            evt-village-quest-letter
            evt-village-rest
            evt-village-recruit
            evt-village-trade
            evt-village-beastMaster
          ]
        }
        {
          charEvents: [
            {
              optional: true
              reqStatus: +mutateOminousAura
              actions: evt-village-leave-aura
            }
            {
              optional: true
              charEvents: {optional: false, count: all, reqStatus: -mutateOminousAura}
              actions: evt-village-leave
            }
          ]
        }
      ]
    }
    {
      id: evt-village-leave-aura
      actionText: txt-evt-leave-action
      alwaysShown: true
      select: [
        {
          reqPartyFlags: +escortVillagerShrineInfo
          setPartyFlags: -escortVillagerShrineInfo
          charEvents: {reqCharFlags: +escortVillager, text: txt-evt-village-leave-escort}
          posTile: {locationFlags: +shrine}
          revealTiles: {radius: 1, centerCam: true}
        }
        {
          prio: 1
          charEvents: [
            {
              optional: true
              reqCharFlags: -special +humanoid
              text: txt-evt-village-leave
            }
            {
              optional: true
              count: all
              reqCharFlags: +special | -humanoid
              text: txt-evt-village-leave-1
            }
            {
              optional: true
              chance: 0.3
              reqLocationFlags: +idolVillage
              reqStatus: +kleptomania
              setLocationFlags: -idolVillage
              setStatus: +kleptomania-idol
            }
            {
              optional: true
              chance: 0.6
              reqStatus: +racist
              text: txt-evt-village-leave-2
            }
            {
              optional: true
              chance: 0.3
              reqCharFlags: +native -slave
              text: txt-evt-village-leave-3
            }
          ]
          partyEvents: [
            # With an evil presence, the villagers will be happy to see us leave during a wedding celebration.
            {
              optional: true
              reqLocationFlags: +wedding
              setLocationFlags: -wedding
              standing: +1
              charEvents: {
                reqStatus: +mutateOminousAura
                text: txt-evt-village-leave-wedding-aura
              }
            }
            # Better to just leave the trek alone...
            {
              optional: true
              chance: 0.5
              reqStanding: -3..-1
              text: txt-evt-village-leave-lowstanding-aura
            }
            {
              optional: true
              reqStanding: -10..-4
              text: txt-evt-village-leave-badstanding-aura
            }
          ]
        }
      ]
    }
    {
      id: dc-defend-mutateDermalArmour
      sprite: hud_dice_bg_animal_2.png
      faces: shell shell shield shield shield stability
    }
    {
      id: st-mutateDermalArmour
      important: true
      debugCategory: mutation
      title: txt-st-mutateDermalArmour-title
      description: txt-st-mutateDermalArmour
      sprite: st_mutate_armour
      bonus: {dice: dc-defend-mutateDermalArmour}
    }
    {
      id: df-vclaw_1
      sprite: hud_dice_symbol_claw_1.png
      bgSprite: hud_dice_bg_attack_1.png
    }
    {
      id: df-vclaw_2
      sprite: hud_dice_symbol_claw_2.png
      bgSprite: hud_dice_bg_attack_1.png
    }
    {
      id: dc-attack-mutateClaws
      sprite: hud_dice_bg_animal_2.png
      faces: vclaw_1 vclaw_1 vclaw_1 vclaw_2 vclaw_2 vclaw_2
    }
    {
      id: dp-attack-vclaw-1
      name: txt-attack-name-vclaw-1
      faces: vclaw_1
      damage: 2
      debugCategory: mutation
      sound: sfx_combat_claw_2
      targetBuff: buf-poison
    }
    {
      id: dp-attack-vclaw-2
      name: txt-attack-name-vclaw-2
      faces: vclaw_2
      damage: 4
      debugCategory: mutation
      sound: sfx_combat_claw_2
      targetBuff: buf-poison
    }
    {
      id: st-mutateClaws
      important: true
      debugCategory: mutation
      title: txt-st-mutateClaws-title
      description: txt-st-mutateClaws
      sprite: res_status_claws.png
      bonus: {dice: dc-attack-mutateClaws}
    }
    {
      id: df-mhorns
      sprite: hud_dice_symbol_mhorns
      bgSprite: hud_dice_bg_attack_1.png
    }
    {
      id: dc-attack-mutateHorns
      sprite: hud_dice_bg_animal_2.png
      faces: ram ram ram ram mhorns mhorns
    }
    {
      id: dp-attack-horns
      name: txt-attack-name-64
      faces: mhorns
      damage: 4
      sound: combat_attack_1
    }
    {
      id: dp-attack-horns-gore
      name: txt-attack-name-horns-gore
      faces: mhorns sword
      damage: 4
      targetBuff: buf-bleeding-normal
      sound: combat_attack_1
    }
    {
      id: st-mutateHorns
      important: true
      debugCategory: mutation
      title: txt-st-mutateHorns-title
      description: txt-st-mutateHorns
      sprite: st_mutate_horns
      bonus: {dice: dc-attack-mutateHorns}
    }
    # Update the existing blessings where there are conflicts, to avoid granting an extra set of claws.
    {
      targetId: /evt-blessingTemple-drink::select
      select: [
        {
          prio: 1
          slots: 1
          reqStatus: -blessingPureMind
          setStatus: +blessingPureMind
          removeStatusWithFlags: +ailment
          text: txt-evt-blessingTemple-drink-1
        }
        {
          prio: 1
          slots: 1
          reqStatus: -blessingRegeneration -mutateLizardFlesh
          setStatus: +blessingRegeneration -infected
          text: txt-evt-blessingTemple-drink-2
          health: 10
        }
        {
          prio: 1
          slots: 1
          reqStatus: -blessingHoly
          setStatus: +blessingHoly
          text: txt-evt-blessingTemple-drink-3
          standing: 3
        }
        {
          prio: 1
          slots: 1
          reqStatus: -blessingInhumanStrength
          setStatus: +blessingInhumanStrength
          text: txt-evt-blessingTemple-drink-4
        }
        {
          prio: 1
          slots: 1
          reqStatus: -blessingLeatherskin -mutateDermalArmour
          setStatus: +blessingLeatherskin
          text: txt-evt-blessingTemple-drink-5
        }
        {
          prio: 1
          slots: 1
          reqStatus: -blessingClaws -mutateClaws
          setStatus: +blessingClaws
          text: txt-evt-blessingTemple-drink-6
        }
        {
          prio: 2
          text: txt-evt-blessingTemple-drink-7
        }
      ]
    }
    # If there's a goat in the party, add sacrifice actions when visiting an altar.
    # Add a separate Sacrifice a goat action first.
    {
      targetId: *evt-altar-actions
      actions: [evt-altar-drop, evt-altar-sacrifice-actions, evt-altar-revive, evt-leave]
    }
    {
      id: evt-altar-sacrifice-actions
      alwaysShown: true
      actionText: txt-evt-altar-sacrifice-action
      text: txt-evt-altar-sacrifice
      charEvents: {optional: false, count: any, reqCharFlags: +goat}
      select: evt-altar-sacrifice
    }
    {
      #targetId: *evt-altar-actions
      id: evt-altar-sacrifice
      charEvents: [
        # To sacrifice to a Great Old One.
        {
          optional: true
          reqPartyStatus: +sacrifice-goat
          charEvents: {reqCharFlags: +cultist}
          count: any
          reqCharFlags: +goat
          actions: {
            actionText: txt-evt-altar-sacrifice-goat-action
            text: txt-evt-altar-sacrifice-goat-done
            removeCharacter: true
            setPartyFlags: +sacrificed-goat
            # Grant a mutation to a cultist and add a sacrificed-goat flag to them.
            charEvents: {
              reqCharFlags: +cultist
              count: any
              setCharFlags: -sacrificed-goat
              actions: {
                actionText: txt-evt-altar-pick-cultist-action
                setCharFlags: +sacrificed-goat
                partyEvents: [
                  {ref: evt-mutate-cultist}
                  {ref: evt-traumatize-cultist}
                  {ref: evt-superstitious-angry}
                ]
                select: evt-altar-actions
              }
            }
          }
        }
        # To add 60 karma to the party.
        {
          optional: true
          count: any
          reqCharFlags: +goat
          actions: {
            actionText: txt-evt-altar-goat-action
            text: txt-evt-altar-goat-done
            storeCharacter: true
            setCharFlags: +dead
            karma: 60
            partyEvents: evt-superstitious-angry
            select: evt-altar-actions
          }
        }
      ]
      actions: {actionText: txt-evt-altar-sacrifice-goat-cancel-action, text: txt-evt-altar-sacrifice-goat-cancel, select: evt-altar-actions}
    }
    {
      id: evt-mutate-cultist
      charEvents: {
        optional: true
        reqCharFlags: +sacrificed-goat
        chat: cl-mutate-cultist
        select: [
          {
            prio: 1
            slots: 1
            reqStatus: -mutateTentacle
            setStatus: +mutateTentacle
            text: txt-evt-mutate-cultist-tentacle
          }
          {
            prio: 1
            slots: 1
            reqStatus: -mutateLizardFlesh -blessingRegeneration
            setStatus: +mutateLizardFlesh
            text: txt-evt-mutate-cultist-flesh
            health: 10
          }
          {
            prio: 1
            slots: 1
            reqStatus: -mutateOminousAura
            setStatus: +mutateOminousAura
            text: txt-evt-mutate-cultist-aura
          }
          {
            prio: 1
            slots: 1
            reqStatus: -blessingInhumanStrength
            setStatus: +blessingInhumanStrength
            text: txt-evt-mutate-cultist-strength
          }
          {
            prio: 1
            slots: 1
            reqStatus: -mutateDermalArmour -blessingLeatherskin
            setStatus: +mutateDermalArmour
            text: txt-evt-mutate-cultist-armour
          }
          {
            prio: 1
            slots: 1
            reqStatus: -mutateClaws -blessingClaws
            setStatus: +mutateClaws
            text: txt-evt-mutate-cultist-claws
          }
          {
            prio: 1
            slots: 1
            reqStatus: -mutateHorns
            setStatus: +mutateHorns
            text: txt-evt-mutate-cultist-horns
          }
          {
            prio: 2
            text: txt-evt-mutate-cultist-none
          }
        ]
      }
    }
    {
      id: evt-traumatize-cultist
      charEvents: {
        optional: true
        reqCharFlags: +sacrificed-goat
        select: [
          {
            slots: 1
            reqStatus: -paranoid -blessingPureMind
            setStatus: +st-paranoid
          }
          {
            slots: 1
            reqStatus: -claustrophobic -blessingPureMind
            setStatus: +st-claustrophobic
          }
          {
            slots: 1
            reqStatus: -lepidopterophobia -blessingPureMind
            setStatus: +st-lepidopterophobia
          }
          {
            slots: 1
            reqStatus: -kleptomania -blessingPureMind
            setStatus: +st-kleptomania
          }
          {
            slots: 1
            reqStatus: -pyromaniac -blessingPureMind
            setStatus: +pyromaniac
          }
          {
            slots: 1
            reqStatus: -acrophobia -blessingPureMind
            setStatus: +st-acrophobia
          }
          {
            slots: 1
            reqStatus: -dendrophobia -blessingPureMind
            setStatus: +st-dendrophobia
          }
        ]
      }
    }
    {
      id: cl-mutate-cultist
      lines: [
        {text: txt-cl-mutate-cultist, reqCharFlags: +humanoid}
      ]
    }
    {
      targetId: /evt-altar-revive::storeEvents
      storeEvents: {
        count: ..4
        reqCharFlags: +dead
        select: [
          {
            slots: 1
            reqCharFlags: +humanoid
            actions: {
              actionText: txt-evt-altar-revive-action-1
              text: txt-evt-altar-revive-1
              restoreCharacter: true
              incAchievement: ach-revive
              karma: -60
              select: evt-altar-actions
            }
          }
          {
            slots: 1
            reqCharFlags: +animal
            actions: {
              actionText: txt-evt-altar-revive-action-1
              text: txt-evt-altar-revive-animal
              restoreCharacter: true
              incAchievement: ach-revive
              karma: -60
              select: evt-altar-actions
            }
          }
        ]
      }
    }
  ]
}