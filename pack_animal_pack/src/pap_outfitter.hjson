[
  # Add the outfitter as a sublocation to native villages so it will spawn with them.
  {
    targetId: /loc-village-1::subLocations
    data: [
      {
        ref: loc-subLocation-village-1 loc-subLocation-village-2
        offsets: 4n 4sw 4se
        chance: 0.75
      }
      {
        reqPartyStatus: +sacrifice-goat
        ref: loc-village-outfitter
        offsets: 1nw
      }
    ]
  }
  
  # The new outfitter location allows us to create an outfitter inventory distinct from
  # the village trade inventory.
  {
    id: loc-village-outfitter
    debugCategory: subLocations
    debugColor: blue
    showHint: false
    hideParty: false
    sprite: [
      {ref: fxt_outfitter_01, reqBiomeFlags: -arctic}
      {ref: res_fxt_sub_fire_3.png, reqBiomeFlags: +arctic}
    ]
    setTile: [
      {ref: tl-dry, reqBiomeFlags: +dry | +desert}
      {ref: tl-deepSnow, reqBiomeFlags: +arctic}
      {ref: tl-grass, reqBiomeFlags: +grass | +prehistoric}
    ]
    spawnEvents: {setLocationFlags: +villageOutfitter}
  }
  
  # If the player accepted the goat sacrifice quest then ensure the village has an outfitter
  # which will provide a goat for trade and make the quest achievable.
  {
    targetId: +evt-village-enter-selectEvent::select
    prio: 1
    reqWorld: 1..
    reqPartyStatus: +sacrifice-goat
    select: evt-village-enter-outfitter
  }

  # Otherwise there's a chance a village will have an outfitter.
  {
    targetId: +evt-village-enter-selectEvent::select
    prio: 3
    reqWorld: 1..
    reqLocationFlags: -outfitter
    reqStanding: -3..
    select: evt-village-enter-outfitter
  }
  {
    id: evt-village-enter-outfitter
    setLocationFlags: +outfitter
    text: txt-evt-village-enter-outfitter
    actions: evt-village-enterCheck
  }
  
  # No way to slide in a new entry between existing entries so replace the entire list.
  # This makes the mod not very compatible unfortunately.
  {
    targetId: /evt-village-actions::select
    data: [
      {
        actions: [
          evt-village-familyAmulet
          evt-village-quest-letter
          evt-village-rest
          evt-village-recruit
          evt-village-trade
          evt-village-outfitter
          evt-village-beastMaster
          evt-village-leave
        ]
      }
    ]
  }
  
  # Vistit the village outfitter. Teleport the party to the sublocation
  # so we can provide a distinct location inventory.
  {
    id: evt-village-outfitter
    reqLocationFlags: +outfitter
    actionText: txt-evt-village-outfitter-action
    posTile: {range: ..1, locationFlags: +villageOutfitter}
    teleport: true
    npc: npc-trader
    text: txt-evt-village-outfitter
    showPartyCount: true
    #chat: cl-outfitter-recruit
    select: evt-village-outfitter-actions
  }
  {
    id: evt-village-outfitter-actions
    partyEvents: [
      {
        optional: true
        reqLocationFlags: -packSet
        setLocationFlags: +packSet
        select: [
          {slots: 3, setLocationFlags: +packNormal}
          {slots: 1, setLocationFlags: +packExotic}
        ]
      }
      {
        # The outfitter will have 1 to 4 animals.
        optional: true
        reqLocationFlags: -packCountSet
        setLocationFlags: +packCountSet
        select: [
          {slots: 2, setLocationFlags: +packCount1}
          {slots: 3, setLocationFlags: +packCount1 +packCount2}
          {slots: 4, setLocationFlags: +packCount1 +packCount2 +packCount3}
          {slots: 1, setLocationFlags: +packCount1 +packCount2 +packCount3 +packCount4}
        ]
      }
      {
        # If the party is on the goat sacrifice quest then animal 1 will always be a goat.
        optional: true
        reqPartyStatus: +sacrifice-goat
        reqLocationFlags: -packCount1Set
        setLocationFlags: +outfitterGoat1 +packCount1Set
      }
      # Randomly select the available pack animals.
      {
        optional: true
        reqLocationFlags: +packCount1 -packCount1Set
        setLocationFlags: +packCount1Set
        select: [
          {slots: 1, setLocationFlags: +outfitterGoat1}
          {slots: 1, setLocationFlags: +outfitterDonkey1}
          {slots: 1, setLocationFlags: +outfitterHorse1}
        ]
      }
      {
        optional: true
        reqLocationFlags: +packCount2 -packCount2Set
        setLocationFlags: +packCount2Set
        select: [
          {slots: 1, setLocationFlags: +outfitterGoat2}
          {slots: 1, setLocationFlags: +outfitterDonkey2}
          {slots: 1, setLocationFlags: +outfitterHorse2}
        ]
      }
      {
        optional: true
        reqLocationFlags: +packCount3 -packCount3Set
        setLocationFlags: +packCount3Set
        select: [
          {slots: 1, setLocationFlags: +outfitterGoat3}
          {slots: 1, setLocationFlags: +outfitterDonkey3}
          {slots: 1, setLocationFlags: +outfitterHorse3}
        ]
      }
      {
        optional: true
        reqLocationFlags: +packCount4 -packCount4Set
        setLocationFlags: +packCount4Set
        select: [
          {slots: 1, setLocationFlags: +outfitterGoat4}
          {slots: 1, setLocationFlags: +outfitterDonkey4}
          {slots: 1, setLocationFlags: +outfitterHorse4}
        ]
      }
      {
        ref: evt-outfitter-recruit
      }
      #{
      #  reqLocationFlags: +beastSpecial_1
      #  optional: true
      #  select: [
      #    {reqBiomeFlags: -arctic, select: evt-village-beastMaster-recruit-tiger-white}
      #    {
      #      reqBiomeFlags: +arctic
      #      select: evt-village-beastMaster-recruit-sabertooth-white
      #    }
      #  ]
      #}
    ]
    actions: [
      evt-outfitter-barter
      evt-outfitter-leave
    ]
  }
  
  # The outfitter should have locally-sourced sanity items and tools available for trade.
  {
    id: il-trade-outfitter
    items: [
      {slots: 2, it-machete: 20}
      {slots: 2, it-rope: 20}
      {slots: 2, it-shovel: 5}
      {slots: 2, it-torch: 10}
      {slots: 2, it-meat-animal-cooked-perfect: 10}
      {slots: 2, it-goat-cheese-perfect: 5}
      {slots: 1, it-elephantTusk: 3}
      {slots: 1, it-firstAid: 10}
      {slots: 1, it-crystalBall: 1}
      {slots: 1, it-pendulum-treasure: 1}
      {slots: 1, it-pendulum-blessing: 1}
      {slots: 1, it-pendulum-shrine: 1}
    ]
  }
  {
    id: evt-outfitter-barter
    actionText: txt-evt-outfitter-barter-action
    select: [
      {
        slots: 4
        barter: {
          items: {il-trade-outfitter: 6, il-trade-shamanHut: 2, it-water: 20, il-metaItems: 99}
          closeEvents: evt-village-outfitter-actions
          cancelEvents: {text: txt-evt-outfitter-barter-cancel, select: evt-village-outfitter-actions}
        }
      }
      {
        slots: 1
        barter: {
          items: {il-trade-outfitter: 6, il-trade-trader-weapons: 2, il-trade-shamanHut: 3, it-water: 20, il-metaItems: 99}
          closeEvents: evt-village-outfitter-actions
          cancelEvents: {text: txt-evt-outfitter-barter-cancel, select: evt-village-outfitter-actions}
        }
      }
    ]
  }
  
  # This recruit event will set up the recruit actions based on the available animals.
  {
    id: evt-outfitter-recruit
    partyEvents: [
      {optional: true, reqLocationFlags: +outfitterGoat1, select: evt-outfitter-recruit-goat}
      {optional: true, reqLocationFlags: +outfitterGoat2, select: evt-outfitter-recruit-goat}
      {optional: true, reqLocationFlags: +outfitterGoat3, select: evt-outfitter-recruit-goat}
      {optional: true, reqLocationFlags: +outfitterGoat4, select: evt-outfitter-recruit-goat}
      {optional: true, reqLocationFlags: +outfitterDonkey1, select: evt-outfitter-recruit-donkey}
      {optional: true, reqLocationFlags: +outfitterDonkey2, select: evt-outfitter-recruit-donkey}
      {optional: true, reqLocationFlags: +outfitterDonkey3, select: evt-outfitter-recruit-donkey}
      {optional: true, reqLocationFlags: +outfitterDonkey4, select: evt-outfitter-recruit-donkey}
      {optional: true, reqLocationFlags: +outfitterHorse1, select: evt-outfitter-recruit-horse}
      {optional: true, reqLocationFlags: +outfitterHorse2, select: evt-outfitter-recruit-horse}
      {optional: true, reqLocationFlags: +outfitterHorse3, select: evt-outfitter-recruit-horse}
      {optional: true, reqLocationFlags: +outfitterHorse4, select: evt-outfitter-recruit-horse}
    ]
  }

  # Buy a goat.
  {
    id: evt-outfitter-recruit-goat
    select: [
      {
        npc: anm-goat-female
        npcEvents: {
          actions: [
            {
              actionText: txt-evt-outfitter-recruit-action
              barter: {
                baseValue: 20
                closeEvents: {
                  text: txt-evt-outfitter-recruit
                  addNPC: true
                  partyEvents: evt-outfitter-recruited-goat
                  setPartyFlags: +recruitedSomebody
                  select: evt-village-outfitter-actions
                }
                cancelEvents: {text: txt-evt-outfitter-barter-cancel, select: evt-village-outfitter-actions}
              }
            }
          ]
        }
      }
      {
        npc: anm-goat-male
        npcEvents: {
          actions: [
            {
              actionText: txt-evt-outfitter-recruit-action
              barter: {
                baseValue: 20
                closeEvents: {
                  text: txt-evt-outfitter-recruit
                  addNPC: true
                  partyEvents: evt-outfitter-recruited-goat
                  setPartyFlags: +recruitedSomebody
                  select: evt-village-outfitter-actions
                }
                cancelEvents: {text: txt-evt-outfitter-barter-cancel, select: evt-village-outfitter-actions}
              }
            }
          ]
        }
      }
    ]
  }
  # Set flags to remove the goat from the action list and for customizing the outfitter description.
  {
    id: evt-outfitter-recruited-goat
    select: [
      {prio: 1, reqLocationFlags: +outfitterGoat1, setLocationFlags: -outfitterGoat1 +recruited1}
      {prio: 2, reqLocationFlags: +outfitterGoat2, setLocationFlags: -outfitterGoat2 +recruited2}
      {prio: 3, reqLocationFlags: +outfitterGoat3, setLocationFlags: -outfitterGoat3 +recruited3}
      {prio: 4, reqLocationFlags: +outfitterGoat4, setLocationFlags: -outfitterGoat4 +recruited4}
    ]
  }
  
  # Buy a donkey.
  {
    id: evt-outfitter-recruit-donkey
    npc: anm-donkey
    npcEvents: {
      actions: [
        {
          actionText: txt-evt-outfitter-recruit-action
          barter: {
            baseValue: 30
            closeEvents: {
              text: txt-evt-outfitter-recruit
              addNPC: true
              partyEvents: evt-outfitter-recruited-donkey
              setPartyFlags: +recruitedSomebody
              select: evt-village-outfitter-actions
            }
            cancelEvents: {text: txt-evt-outfitter-barter-cancel, select: evt-village-outfitter-actions}
          }
        }
      ]
    }
  }
  # Set flags to remove the donkey from the action list and for customizing the outfitter description.
  {
    id: evt-outfitter-recruited-donkey
    select: [
      {prio: 1, reqLocationFlags: +outfitterDonkey1, setLocationFlags: -outfitterDonkey1 +recruited1}
      {prio: 2, reqLocationFlags: +outfitterDonkey2, setLocationFlags: -outfitterDonkey2 +recruited2}
      {prio: 3, reqLocationFlags: +outfitterDonkey3, setLocationFlags: -outfitterDonkey3 +recruited3}
      {prio: 4, reqLocationFlags: +outfitterDonkey4, setLocationFlags: -outfitterDonkey4 +recruited4}
    ]
  }

  # Buy a horse.
  {
    id: evt-outfitter-recruit-horse
    npc: anm-horse
    npcEvents: {
      actions: [
        {
          actionText: txt-evt-outfitter-recruit-action
          barter: {
            baseValue: 40
            closeEvents: {
              text: txt-evt-outfitter-recruit
              addNPC: true
              partyEvents: evt-outfitter-recruited-horse
              setPartyFlags: +recruitedSomebody
              select: evt-village-outfitter-actions
            }
            cancelEvents: {text: txt-evt-outfitter-barter-cancel, select: evt-village-outfitter-actions}
          }
        }
      ]
    }
  }
  # Set flags to remove the horse from the action list and for customizing the outfitter description.
  {
    id: evt-outfitter-recruited-horse
    select: [
      {prio: 1, reqLocationFlags: +outfitterHorse1, setLocationFlags: -outfitterHorse1 +recruited1}
      {prio: 2, reqLocationFlags: +outfitterHorse2, setLocationFlags: -outfitterHorse2 +recruited2}
      {prio: 3, reqLocationFlags: +outfitterHorse3, setLocationFlags: -outfitterHorse3 +recruited3}
      {prio: 4, reqLocationFlags: +outfitterHorse4, setLocationFlags: -outfitterHorse4 +recruited4}
    ]
  }

  {
    id: evt-outfitter-recruit-water-buffalo
    actions: [
      {
        actionText: txt-evt-outfitter-recruit-action
        barter: {
          baseValue: 50
          closeEvents: {
            text: txt-evt-outfitter-recruit
            addCharacter: anm-water-buffalo
            #setPartyFlags: +recruitedSomebody
            select: evt-village-outfitter-actions
          }
          cancelEvents: {text: txt-evt-outfitter-barter-cancel, select: evt-village-outfitter-actions}
        }
      }
    ]
  }
  {
    id: evt-outfitter-recruit-yak
    #actions: [
    #  {
    #    actionText: txt-evt-outfitter-recruit-action
    #    barter: {
    #      baseValue: 75
    #      closeEvents: {
    #        text: txt-evt-outfitter-recruit
    #        addCharacter: anm-yak
    #        setPartyFlags: +recruitedSomebody
    #      }
    #      cancelEvents: {text: txt-evt-outfitter-barter-cancel}
    #    }
        select: evt-village-outfitter-actions
    #  }
    #]
  }
  
  # When leaving, teleport the party back to the village before pulling up the village actions.
  {
    id: evt-outfitter-leave
    actionText: txt-evt-village-main-update-action
    posTile: {range: ..1, locationFlags: +village}
    teleport: true
    select: evt-village-main-update
  }
]